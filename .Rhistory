shiny::runApp()
# Chunk 1: load-in
library(knitr)
# folder <- "E:\\Projects\\manhattanPrep\\"
folder <- "C:\\Users\\bmburk\\Dropbox\\Projects\\manhattanPrep\\"
# api.key <- read.table(paste0(folder, "convertAPIKey"), header = F)[[1]]
wf <- read.csv(paste0(folder, "GMATraw.csv"), stringsAsFactors = FALSE)
names(wf)[1] <- "SID"
ques <- read.csv(paste0(folder, "GMATrawQues.csv"), stringsAsFactors = FALSE)
names(wf) <- gsub("InstructorFirstName", "name", ques[,2])
# convert_pdf(paste0(folder, "CodeSheet.pdf"), paste0(folder, "codesheetcsv.csv"), api_key = api.key)
cs <- read.csv(paste0(folder, "codesheetcsv.csv"), skip = 2, stringsAsFactors = FALSE)
# Chunk 2: light exploration
t.df <- data.frame(table(wf$`How would you rate your overall learning experience with Manhattan Prep?`))
t.df$Pct <- round((t.df$Freq/sum(t.df$Freq)) * 100, 2)
kable(t.df)
lowest.rating <- subset(wf,
wf$`How would you rate your overall learning experience with Manhattan Prep?` <= 2)
higher.rating <- subset(wf,
wf$`How would you rate your overall learning experience with Manhattan Prep?` > 2)
rating.df <- data.frame(overall = colMeans(wf[,2:34], na.rm = T),
lowest = colMeans(lowest.rating[,2:34], na.rm = T),
highest = colMeans(higher.rating[,2:34], na.rm = T))
rating.df$high.low.diffs <- rating.df$highest - rating.df$lowest
colMeans(rating.df)
apply(rating.df, 2, sd)
rating.df <- data.frame(question = substr(row.names(rating.df), 1, 30), rating.df)
row.names(rating.df) <- NULL
biggest.diff <- subset(rating.df, rating.df$high.low.diffs >= mean(rating.df$high.low.diffs) +
sd(rating.df$high.low.diffs))
kable(biggest.diff)
smallest.diff <- subset(rating.df, rating.df$high.low.diffs <= mean(rating.df$high.low.diffs) -
sd(rating.df$high.low.diffs))
kable(smallest.diff)
rating.df$overall.low.diffs <- rating.df$overall - rating.df$lowest
kable(rating.df)
# Chunk 3: model building
temp.wf <-  wf[,-c(1, 11, 24:38)]
temp.wf$'Has Coinstructor' <- ifelse(is.na(wf$`Co-Instructor Code`), 0, 1)
names(temp.wf)[1] <- 'y'
model1 <- lm(y ~ ., data = temp.wf)
quantile(summary(model1)$residuals)
summary(model1)$r.squared
summary(model1)$adj.r.squared
kable(data.frame(model1$coefficients))
plot(model1)
quantile(summary(model2)$residuals)
summary(model2)$r.squared
summary(model2)$adj.r.squared
kable(data.frame(model2$coefficients))
plot(model2)
kable(data.frame(anova(model2)))
# Chunk 5: net promoter modeling
wf2 <- wf
wf2[,2][wf2[,2] == 4] <- 'Prom'
wf2[,2][wf2[,2] == 3] <- 'Pass'
wf2[,2][wf2[,2] <= 2] <- 'Detr'
wf2 <- wf2[!is.na(wf2$`How would you rate your overall learning experience with Manhattan Prep?`),]
total.wf2 <- sum(table(wf2[,2]))
wf2.pcts <- round((table(wf2[,2])/total.wf2) * 100, 2)
net.promoter <- (wf2.pcts[3] - wf2.pcts[1])[[1]]
detr <- wf2[wf2[,2] == 'Detr',]
pass <- wf2[wf2[,2] == 'Pass',]
prom <- wf2[wf2[,2] == 'Prom',]
cat('  \\newpage  ')
for(curr.col in 3:37){
if(exists("joined.df")) remove(joined.df)
for(type.resp in unique(wf2[,2])){
temp <- wf2[wf2[,2] == type.resp,]
temp.df <- data.frame(table(temp[,curr.col]), stringsAsFactors = F)
temp.df$Pct <- round((temp.df$Freq/sum(temp.df$Freq)) * 100, 2)
names(temp.df)[2:ncol(temp.df)] <- paste(type.resp, names(temp.df[2:ncol(temp.df)]))
cat("  \n  ")
if(exists("joined.df")){
joined.df <- data.frame(merge(joined.df, temp.df, by = "Var1", all = TRUE), stringsAsFactors = F)
} else {
joined.df <- temp.df
}
}
names(joined.df)[1] <- "V1"
joined.df <- joined.df[order(as.character(joined.df[,1])),]
joined.df <- rbind(joined.df,
data.frame(t(c('SUM', colSums(joined.df[,2:7], na.rm = T))))
)
cat(names(wf2)[curr.col])
print(kable(joined.df))
}
install.packages('Gmisc')
install.packages('pander')
library(pander)
